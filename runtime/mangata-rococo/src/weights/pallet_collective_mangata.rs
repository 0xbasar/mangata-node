// This file is part of Mangata.

// Copyright (C) 2020-2022 Mangata Foundation.
// SPDX-License-Identifier: GPL-3.0-or-later WITH Classpath-exception-2.0

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for pallet_collective_mangata
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-10-02, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("kusama"), DB CACHE: 1024

// Executed Command:
// target/release/mangata-node
// benchmark
// pallet
// -l=info,xyk=error,collective-mangata=warn,bootstrap=warn
// --chain
// kusama
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// *
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --template
// ./templates/module-weight-template.hbs
// --output
// ./benchmarks/

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(clippy::unnecessary_cast)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_collective_mangata.
pub trait WeightInfo {
	fn set_members(m: u32, n: u32, p: u32, ) -> Weight;
	fn execute(b: u32, m: u32, ) -> Weight;
	fn propose_execute(b: u32, m: u32, ) -> Weight;
	fn propose_proposed(b: u32, m: u32, p: u32, ) -> Weight;
	fn vote(m: u32, ) -> Weight;
	fn close_early_disapproved(m: u32, p: u32, ) -> Weight;
	fn close_early_approved(b: u32, m: u32, p: u32, ) -> Weight;
	fn close_disapproved(m: u32, p: u32, ) -> Weight;
	fn close_approved(b: u32, m: u32, p: u32, ) -> Weight;
	fn disapprove_proposal(p: u32, ) -> Weight;
}

/// Weights for pallet_collective_mangata using the Mangata node and recommended hardware.
pub struct ModuleWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_collective_mangata::WeightInfo for ModuleWeight<T> {
	// Storage: Council Members (r:1 w:1)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Proposals (r:1 w:0)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Voting (r:100 w:100)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Prime (r:0 w:1)
	// Proof Skipped: Council Prime (max_values: Some(1), max_size: None, mode: Measured)
	fn set_members(m: u32, _n: u32, p: u32, ) -> Weight {
		(Weight::from_parts(90_800_000, 0))
			// Standard Error: 69_203
			.saturating_add((Weight::from_parts(5_566_250, 0)).saturating_mul(m as u64))
			// Standard Error: 69_203
			.saturating_add((Weight::from_parts(10_729_781, 0)).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(p as u64)))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(p as u64)))
	}
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	fn execute(b: u32, m: u32, ) -> Weight {
		(Weight::from_parts(31_313_537, 0))
			// Standard Error: 94
			.saturating_add((Weight::from_parts(1_862, 0)).saturating_mul(b as u64))
			// Standard Error: 972
			.saturating_add((Weight::from_parts(25_991, 0)).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
	}
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:1 w:0)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	fn propose_execute(b: u32, m: u32, ) -> Weight {
		(Weight::from_parts(34_536_810, 0))
			// Standard Error: 85
			.saturating_add((Weight::from_parts(2_168, 0)).saturating_mul(b as u64))
			// Standard Error: 883
			.saturating_add((Weight::from_parts(45_007, 0)).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
	}
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:1 w:1)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Proposals (r:1 w:1)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalCount (r:1 w:1)
	// Proof Skipped: Council ProposalCount (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalProposedTime (r:0 w:1)
	// Proof Skipped: Council ProposalProposedTime (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Voting (r:0 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	fn propose_proposed(b: u32, m: u32, p: u32, ) -> Weight {
		(Weight::from_parts(49_784_354, 0))
			// Standard Error: 163
			.saturating_add((Weight::from_parts(4_191, 0)).saturating_mul(b as u64))
			// Standard Error: 1_705
			.saturating_add((Weight::from_parts(35_364, 0)).saturating_mul(m as u64))
			// Standard Error: 1_683
			.saturating_add((Weight::from_parts(301_218, 0)).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(5 as u64))
	}
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Voting (r:1 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	fn vote(m: u32, ) -> Weight {
		(Weight::from_parts(45_999_012, 0))
			// Standard Error: 944
			.saturating_add((Weight::from_parts(70_544, 0)).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Voting (r:1 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: Council ProposalProposedTime (r:1 w:1)
	// Proof Skipped: Council ProposalProposedTime (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Proposals (r:1 w:1)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:0 w:1)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	fn close_early_disapproved(m: u32, p: u32, ) -> Weight {
		(Weight::from_parts(67_599_850, 0))
			// Standard Error: 1_737
			.saturating_add((Weight::from_parts(80_078, 0)).saturating_mul(m as u64))
			// Standard Error: 1_694
			.saturating_add((Weight::from_parts(294_524, 0)).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Voting (r:1 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: Council ProposalProposedTime (r:1 w:1)
	// Proof Skipped: Council ProposalProposedTime (max_values: None, max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:1 w:1)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Proposals (r:1 w:1)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	fn close_early_approved(b: u32, m: u32, p: u32, ) -> Weight {
		(Weight::from_parts(94_619_427, 0))
			// Standard Error: 307
			.saturating_add((Weight::from_parts(2_144, 0)).saturating_mul(b as u64))
			// Standard Error: 3_251
			.saturating_add((Weight::from_parts(94_352, 0)).saturating_mul(m as u64))
			// Standard Error: 3_169
			.saturating_add((Weight::from_parts(315_046, 0)).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(5 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Voting (r:1 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: Council ProposalProposedTime (r:1 w:1)
	// Proof Skipped: Council ProposalProposedTime (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Prime (r:1 w:0)
	// Proof Skipped: Council Prime (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Proposals (r:1 w:1)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:0 w:1)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	fn close_disapproved(m: u32, p: u32, ) -> Weight {
		(Weight::from_parts(71_391_246, 0))
			// Standard Error: 1_912
			.saturating_add((Weight::from_parts(92_748, 0)).saturating_mul(m as u64))
			// Standard Error: 1_865
			.saturating_add((Weight::from_parts(298_046, 0)).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(5 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Voting (r:1 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: Council ProposalProposedTime (r:1 w:1)
	// Proof Skipped: Council ProposalProposedTime (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Prime (r:1 w:0)
	// Proof Skipped: Council Prime (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:1 w:1)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Proposals (r:1 w:1)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	fn close_approved(b: u32, m: u32, p: u32, ) -> Weight {
		(Weight::from_parts(98_330_423, 0))
			// Standard Error: 297
			.saturating_add((Weight::from_parts(3_678, 0)).saturating_mul(b as u64))
			// Standard Error: 3_149
			.saturating_add((Weight::from_parts(97_124, 0)).saturating_mul(m as u64))
			// Standard Error: 3_070
			.saturating_add((Weight::from_parts(313_849, 0)).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(6 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: Council Proposals (r:1 w:1)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalProposedTime (r:0 w:1)
	// Proof Skipped: Council ProposalProposedTime (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Voting (r:0 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:0 w:1)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	fn disapprove_proposal(p: u32, ) -> Weight {
		(Weight::from_parts(36_844_726, 0))
			// Standard Error: 1_413
			.saturating_add((Weight::from_parts(281_628, 0)).saturating_mul(p as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: Council Members (r:1 w:1)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Proposals (r:1 w:0)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Voting (r:100 w:100)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Prime (r:0 w:1)
	// Proof Skipped: Council Prime (max_values: Some(1), max_size: None, mode: Measured)
	fn set_members(m: u32, _n: u32, p: u32, ) -> Weight {
		(Weight::from_parts(90_800_000, 0))
			// Standard Error: 69_203
			.saturating_add((Weight::from_parts(5_566_250, 0)).saturating_mul(m as u64))
			// Standard Error: 69_203
			.saturating_add((Weight::from_parts(10_729_781, 0)).saturating_mul(p as u64))
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().reads((1 as u64).saturating_mul(p as u64)))
			.saturating_add(RocksDbWeight::get().writes(2 as u64))
			.saturating_add(RocksDbWeight::get().writes((1 as u64).saturating_mul(p as u64)))
	}
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	fn execute(b: u32, m: u32, ) -> Weight {
		(Weight::from_parts(31_313_537, 0))
			// Standard Error: 94
			.saturating_add((Weight::from_parts(1_862, 0)).saturating_mul(b as u64))
			// Standard Error: 972
			.saturating_add((Weight::from_parts(25_991, 0)).saturating_mul(m as u64))
			.saturating_add(RocksDbWeight::get().reads(1 as u64))
	}
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:1 w:0)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	fn propose_execute(b: u32, m: u32, ) -> Weight {
		(Weight::from_parts(34_536_810, 0))
			// Standard Error: 85
			.saturating_add((Weight::from_parts(2_168, 0)).saturating_mul(b as u64))
			// Standard Error: 883
			.saturating_add((Weight::from_parts(45_007, 0)).saturating_mul(m as u64))
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
	}
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:1 w:1)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Proposals (r:1 w:1)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalCount (r:1 w:1)
	// Proof Skipped: Council ProposalCount (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalProposedTime (r:0 w:1)
	// Proof Skipped: Council ProposalProposedTime (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Voting (r:0 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	fn propose_proposed(b: u32, m: u32, p: u32, ) -> Weight {
		(Weight::from_parts(49_784_354, 0))
			// Standard Error: 163
			.saturating_add((Weight::from_parts(4_191, 0)).saturating_mul(b as u64))
			// Standard Error: 1_705
			.saturating_add((Weight::from_parts(35_364, 0)).saturating_mul(m as u64))
			// Standard Error: 1_683
			.saturating_add((Weight::from_parts(301_218, 0)).saturating_mul(p as u64))
			.saturating_add(RocksDbWeight::get().reads(4 as u64))
			.saturating_add(RocksDbWeight::get().writes(5 as u64))
	}
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Voting (r:1 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	fn vote(m: u32, ) -> Weight {
		(Weight::from_parts(45_999_012, 0))
			// Standard Error: 944
			.saturating_add((Weight::from_parts(70_544, 0)).saturating_mul(m as u64))
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Voting (r:1 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: Council ProposalProposedTime (r:1 w:1)
	// Proof Skipped: Council ProposalProposedTime (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Proposals (r:1 w:1)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:0 w:1)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	fn close_early_disapproved(m: u32, p: u32, ) -> Weight {
		(Weight::from_parts(67_599_850, 0))
			// Standard Error: 1_737
			.saturating_add((Weight::from_parts(80_078, 0)).saturating_mul(m as u64))
			// Standard Error: 1_694
			.saturating_add((Weight::from_parts(294_524, 0)).saturating_mul(p as u64))
			.saturating_add(RocksDbWeight::get().reads(4 as u64))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
	}
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Voting (r:1 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: Council ProposalProposedTime (r:1 w:1)
	// Proof Skipped: Council ProposalProposedTime (max_values: None, max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:1 w:1)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Proposals (r:1 w:1)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	fn close_early_approved(b: u32, m: u32, p: u32, ) -> Weight {
		(Weight::from_parts(94_619_427, 0))
			// Standard Error: 307
			.saturating_add((Weight::from_parts(2_144, 0)).saturating_mul(b as u64))
			// Standard Error: 3_251
			.saturating_add((Weight::from_parts(94_352, 0)).saturating_mul(m as u64))
			// Standard Error: 3_169
			.saturating_add((Weight::from_parts(315_046, 0)).saturating_mul(p as u64))
			.saturating_add(RocksDbWeight::get().reads(5 as u64))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
	}
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Voting (r:1 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: Council ProposalProposedTime (r:1 w:1)
	// Proof Skipped: Council ProposalProposedTime (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Prime (r:1 w:0)
	// Proof Skipped: Council Prime (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Proposals (r:1 w:1)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:0 w:1)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	fn close_disapproved(m: u32, p: u32, ) -> Weight {
		(Weight::from_parts(71_391_246, 0))
			// Standard Error: 1_912
			.saturating_add((Weight::from_parts(92_748, 0)).saturating_mul(m as u64))
			// Standard Error: 1_865
			.saturating_add((Weight::from_parts(298_046, 0)).saturating_mul(p as u64))
			.saturating_add(RocksDbWeight::get().reads(5 as u64))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
	}
	// Storage: Council Members (r:1 w:0)
	// Proof Skipped: Council Members (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council Voting (r:1 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: Council ProposalProposedTime (r:1 w:1)
	// Proof Skipped: Council ProposalProposedTime (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Prime (r:1 w:0)
	// Proof Skipped: Council Prime (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:1 w:1)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Proposals (r:1 w:1)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	fn close_approved(b: u32, m: u32, p: u32, ) -> Weight {
		(Weight::from_parts(98_330_423, 0))
			// Standard Error: 297
			.saturating_add((Weight::from_parts(3_678, 0)).saturating_mul(b as u64))
			// Standard Error: 3_149
			.saturating_add((Weight::from_parts(97_124, 0)).saturating_mul(m as u64))
			// Standard Error: 3_070
			.saturating_add((Weight::from_parts(313_849, 0)).saturating_mul(p as u64))
			.saturating_add(RocksDbWeight::get().reads(6 as u64))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
	}
	// Storage: Council Proposals (r:1 w:1)
	// Proof Skipped: Council Proposals (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Council ProposalProposedTime (r:0 w:1)
	// Proof Skipped: Council ProposalProposedTime (max_values: None, max_size: None, mode: Measured)
	// Storage: Council Voting (r:0 w:1)
	// Proof Skipped: Council Voting (max_values: None, max_size: None, mode: Measured)
	// Storage: Council ProposalOf (r:0 w:1)
	// Proof Skipped: Council ProposalOf (max_values: None, max_size: None, mode: Measured)
	fn disapprove_proposal(p: u32, ) -> Weight {
		(Weight::from_parts(36_844_726, 0))
			// Standard Error: 1_413
			.saturating_add((Weight::from_parts(281_628, 0)).saturating_mul(p as u64))
			.saturating_add(RocksDbWeight::get().reads(1 as u64))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
	}
}
