// This file is part of Mangata.

// Copyright (C) 2020-2022 Mangata Foundation.
// SPDX-License-Identifier: GPL-3.0-or-later WITH Classpath-exception-2.0

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for parachain_staking
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-10-02, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("kusama"), DB CACHE: 1024

// Executed Command:
// target/release/mangata-node
// benchmark
// pallet
// -l=info,xyk=error,collective-mangata=warn,bootstrap=warn
// --chain
// kusama
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// *
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --template
// ./templates/module-weight-template.hbs
// --output
// ./benchmarks/

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(clippy::unnecessary_cast)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for parachain_staking.
pub trait WeightInfo {
	fn set_total_selected() -> Weight;
	fn set_collator_commission() -> Weight;
	fn join_candidates(x: u32, y: u32, ) -> Weight;
	fn schedule_leave_candidates(x: u32, ) -> Weight;
	fn execute_leave_candidates(x: u32, ) -> Weight;
	fn cancel_leave_candidates(x: u32, ) -> Weight;
	fn go_offline() -> Weight;
	fn go_online() -> Weight;
	fn schedule_candidate_bond_more() -> Weight;
	fn schedule_candidate_bond_less() -> Weight;
	fn execute_candidate_bond_more() -> Weight;
	fn execute_candidate_bond_less() -> Weight;
	fn cancel_candidate_bond_more() -> Weight;
	fn cancel_candidate_bond_less() -> Weight;
	fn delegate(x: u32, y: u32, ) -> Weight;
	fn schedule_leave_delegators() -> Weight;
	fn execute_leave_delegators(x: u32, ) -> Weight;
	fn cancel_leave_delegators() -> Weight;
	fn schedule_revoke_delegation() -> Weight;
	fn schedule_delegator_bond_more() -> Weight;
	fn schedule_delegator_bond_less() -> Weight;
	fn execute_revoke_delegation() -> Weight;
	fn execute_delegator_bond_more() -> Weight;
	fn execute_delegator_bond_less() -> Weight;
	fn cancel_revoke_delegation() -> Weight;
	fn cancel_delegator_bond_more() -> Weight;
	fn cancel_delegator_bond_less() -> Weight;
	fn add_staking_liquidity_token(x: u32, ) -> Weight;
	fn remove_staking_liquidity_token(x: u32, ) -> Weight;
	fn aggregator_update_metadata() -> Weight;
	fn update_candidate_aggregator() -> Weight;
	fn payout_collator_rewards() -> Weight;
	fn payout_delegator_reward() -> Weight;
	fn passive_session_change() -> Weight;
	fn active_session_change(x: u32, y: u32, z: u32, ) -> Weight;
}

/// Weights for parachain_staking using the Mangata node and recommended hardware.
pub struct ModuleWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> parachain_staking::WeightInfo for ModuleWeight<T> {
	// Storage: ParachainStaking TotalSelected (r:1 w:1)
	// Proof Skipped: ParachainStaking TotalSelected (max_values: Some(1), max_size: None, mode: Measured)
	fn set_total_selected() -> Weight {
		(Weight::from_parts(18_150_000, 0))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking CollatorCommission (r:1 w:1)
	// Proof Skipped: ParachainStaking CollatorCommission (max_values: Some(1), max_size: None, mode: Measured)
	fn set_collator_commission() -> Weight {
		(Weight::from_parts(18_530_000, 0))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking DelegatorState (r:1 w:0)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking AggregatorMetadata (r:1 w:0)
	// Proof Skipped: ParachainStaking AggregatorMetadata (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking StakingLiquidityTokens (r:1 w:0)
	// Proof Skipped: ParachainStaking StakingLiquidityTokens (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Xyk LiquidityPools (r:1 w:0)
	// Proof: Xyk LiquidityPools (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	// Storage: Xyk Pools (r:1 w:0)
	// Proof: Xyk Pools (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	// Storage: Tokens TotalIssuance (r:1 w:0)
	// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:1 w:1)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking Total (r:1 w:1)
	// Proof Skipped: ParachainStaking Total (max_values: None, max_size: None, mode: Measured)
	fn join_candidates(x: u32, y: u32, ) -> Weight {
		(Weight::from_parts(128_769_592, 0))
			// Standard Error: 5_183
			.saturating_add((Weight::from_parts(124_370, 0)).saturating_mul(x as u64))
			// Standard Error: 5_120
			.saturating_add((Weight::from_parts(134_647, 0)).saturating_mul(y as u64))
			.saturating_add(T::DbWeight::get().reads(11 as u64))
			.saturating_add(T::DbWeight::get().writes(5 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	fn schedule_leave_candidates(x: u32, ) -> Weight {
		(Weight::from_parts(40_966_197, 0))
			// Standard Error: 1_766
			.saturating_add((Weight::from_parts(121_647, 0)).saturating_mul(x as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:30 w:30)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:30 w:30)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking DelegatorState (r:29 w:29)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidateAggregator (r:1 w:0)
	// Proof Skipped: ParachainStaking CandidateAggregator (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking Total (r:1 w:1)
	// Proof Skipped: ParachainStaking Total (max_values: None, max_size: None, mode: Measured)
	fn execute_leave_candidates(x: u32, ) -> Weight {
		(Weight::from_parts(61_759_888, 0))
			// Standard Error: 25_405
			.saturating_add((Weight::from_parts(31_682_004, 0)).saturating_mul(x as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().reads((3 as u64).saturating_mul(x as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
			.saturating_add(T::DbWeight::get().writes((3 as u64).saturating_mul(x as u64)))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	fn cancel_leave_candidates(x: u32, ) -> Weight {
		(Weight::from_parts(39_197_562, 0))
			// Standard Error: 1_699
			.saturating_add((Weight::from_parts(119_579, 0)).saturating_mul(x as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	fn go_offline() -> Weight {
		(Weight::from_parts(39_200_000, 0))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	fn go_online() -> Weight {
		(Weight::from_parts(38_610_000, 0))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:1 w:0)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:0)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	fn schedule_candidate_bond_more() -> Weight {
		(Weight::from_parts(56_000_000, 0))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: Xyk LiquidityPools (r:1 w:0)
	// Proof: Xyk LiquidityPools (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	// Storage: Xyk Pools (r:1 w:0)
	// Proof: Xyk Pools (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	// Storage: Tokens TotalIssuance (r:1 w:0)
	// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	fn schedule_candidate_bond_less() -> Weight {
		(Weight::from_parts(57_740_000, 0))
			.saturating_add(T::DbWeight::get().reads(5 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:1 w:1)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking Total (r:1 w:1)
	// Proof Skipped: ParachainStaking Total (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	fn execute_candidate_bond_more() -> Weight {
		(Weight::from_parts(90_910_000, 0))
			.saturating_add(T::DbWeight::get().reads(6 as u64))
			.saturating_add(T::DbWeight::get().writes(5 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:1 w:1)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking Total (r:1 w:1)
	// Proof Skipped: ParachainStaking Total (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	fn execute_candidate_bond_less() -> Weight {
		(Weight::from_parts(87_720_000, 0))
			.saturating_add(T::DbWeight::get().reads(6 as u64))
			.saturating_add(T::DbWeight::get().writes(5 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	fn cancel_candidate_bond_more() -> Weight {
		(Weight::from_parts(30_420_000, 0))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	fn cancel_candidate_bond_less() -> Weight {
		(Weight::from_parts(29_860_000, 0))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking AggregatorMetadata (r:1 w:0)
	// Proof Skipped: ParachainStaking AggregatorMetadata (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: Xyk LiquidityPools (r:1 w:0)
	// Proof: Xyk LiquidityPools (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	// Storage: Xyk Pools (r:1 w:0)
	// Proof: Xyk Pools (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	// Storage: Tokens TotalIssuance (r:1 w:0)
	// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:1 w:1)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking Total (r:1 w:1)
	// Proof Skipped: ParachainStaking Total (max_values: None, max_size: None, mode: Measured)
	fn delegate(x: u32, y: u32, ) -> Weight {
		(Weight::from_parts(127_734_458, 0))
			// Standard Error: 7_698
			.saturating_add((Weight::from_parts(369_909, 0)).saturating_mul(x as u64))
			// Standard Error: 7_439
			.saturating_add((Weight::from_parts(357_907, 0)).saturating_mul(y as u64))
			.saturating_add(T::DbWeight::get().reads(10 as u64))
			.saturating_add(T::DbWeight::get().writes(6 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	fn schedule_leave_delegators() -> Weight {
		(Weight::from_parts(33_410_000, 0))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidateState (r:29 w:29)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:1 w:1)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking Total (r:1 w:1)
	// Proof Skipped: ParachainStaking Total (max_values: None, max_size: None, mode: Measured)
	fn execute_leave_delegators(x: u32, ) -> Weight {
		(Weight::from_parts(24_848_761, 0))
			// Standard Error: 26_767
			.saturating_add((Weight::from_parts(38_484_757, 0)).saturating_mul(x as u64))
			.saturating_add(T::DbWeight::get().reads(5 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(x as u64)))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
			.saturating_add(T::DbWeight::get().writes((1 as u64).saturating_mul(x as u64)))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	fn cancel_leave_delegators() -> Weight {
		(Weight::from_parts(31_130_000, 0))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	fn schedule_revoke_delegation() -> Weight {
		(Weight::from_parts(34_070_000, 0))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:1 w:0)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:0)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	fn schedule_delegator_bond_more() -> Weight {
		(Weight::from_parts(56_650_000, 0))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	fn schedule_delegator_bond_less() -> Weight {
		(Weight::from_parts(34_280_000, 0))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:1 w:1)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking Total (r:1 w:1)
	// Proof Skipped: ParachainStaking Total (max_values: None, max_size: None, mode: Measured)
	fn execute_revoke_delegation() -> Weight {
		(Weight::from_parts(111_770_000, 0))
			.saturating_add(T::DbWeight::get().reads(7 as u64))
			.saturating_add(T::DbWeight::get().writes(6 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:1 w:1)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking Total (r:1 w:1)
	// Proof Skipped: ParachainStaking Total (max_values: None, max_size: None, mode: Measured)
	fn execute_delegator_bond_more() -> Weight {
		(Weight::from_parts(103_940_000, 0))
			.saturating_add(T::DbWeight::get().reads(7 as u64))
			.saturating_add(T::DbWeight::get().writes(6 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:1 w:1)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking Total (r:1 w:1)
	// Proof Skipped: ParachainStaking Total (max_values: None, max_size: None, mode: Measured)
	fn execute_delegator_bond_less() -> Weight {
		(Weight::from_parts(99_690_000, 0))
			.saturating_add(T::DbWeight::get().reads(7 as u64))
			.saturating_add(T::DbWeight::get().writes(6 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	fn cancel_revoke_delegation() -> Weight {
		(Weight::from_parts(31_370_000, 0))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	fn cancel_delegator_bond_more() -> Weight {
		(Weight::from_parts(35_290_000, 0))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	fn cancel_delegator_bond_less() -> Weight {
		(Weight::from_parts(35_540_000, 0))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Xyk LiquidityPools (r:1 w:0)
	// Proof: Xyk LiquidityPools (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	// Storage: ParachainStaking StakingLiquidityTokens (r:1 w:1)
	// Proof Skipped: ParachainStaking StakingLiquidityTokens (max_values: Some(1), max_size: None, mode: Measured)
	fn add_staking_liquidity_token(x: u32, ) -> Weight {
		(Weight::from_parts(28_340_872, 0))
			// Standard Error: 2_236
			.saturating_add((Weight::from_parts(153_025, 0)).saturating_mul(x as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking StakingLiquidityTokens (r:1 w:1)
	// Proof Skipped: ParachainStaking StakingLiquidityTokens (max_values: Some(1), max_size: None, mode: Measured)
	fn remove_staking_liquidity_token(x: u32, ) -> Weight {
		(Weight::from_parts(20_686_950, 0))
			// Standard Error: 1_638
			.saturating_add((Weight::from_parts(140_026, 0)).saturating_mul(x as u64))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:99 w:0)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking DelegatorState (r:1 w:0)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking AggregatorMetadata (r:1 w:1)
	// Proof Skipped: ParachainStaking AggregatorMetadata (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidateAggregator (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateAggregator (max_values: Some(1), max_size: None, mode: Measured)
	fn aggregator_update_metadata() -> Weight {
		(Weight::from_parts(1_946_910_000, 0))
			.saturating_add(T::DbWeight::get().reads(102 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:0)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidateAggregator (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateAggregator (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking AggregatorMetadata (r:2 w:2)
	// Proof Skipped: ParachainStaking AggregatorMetadata (max_values: None, max_size: None, mode: Measured)
	fn update_candidate_aggregator() -> Weight {
		(Weight::from_parts(122_120_000, 0))
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: ParachainStaking RoundCollatorRewardInfo (r:2 w:1)
	// Proof Skipped: ParachainStaking RoundCollatorRewardInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: Tokens Accounts (r:32 w:32)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: System Account (r:32 w:31)
	// Proof Skipped: System Account (max_values: None, max_size: None, mode: Measured)
	fn payout_collator_rewards() -> Weight {
		(Weight::from_parts(1_493_000_000, 0))
			.saturating_add(T::DbWeight::get().reads(66 as u64))
			.saturating_add(T::DbWeight::get().writes(64 as u64))
	}
	// Storage: ParachainStaking RoundCollatorRewardInfo (r:1 w:1)
	// Proof Skipped: ParachainStaking RoundCollatorRewardInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: Tokens Accounts (r:2 w:2)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: System Account (r:2 w:1)
	// Proof Skipped: System Account (max_values: None, max_size: None, mode: Measured)
	fn payout_delegator_reward() -> Weight {
		(Weight::from_parts(87_790_000, 0))
			.saturating_add(T::DbWeight::get().reads(5 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	fn passive_session_change() -> Weight {
		(Weight::from_parts(7_670_000, 0))
			.saturating_add(T::DbWeight::get().reads(1 as u64))
	}
	// Storage: ParachainStaking Round (r:1 w:1)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Session CurrentIndex (r:1 w:1)
	// Proof Skipped: Session CurrentIndex (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Session QueuedChanged (r:1 w:1)
	// Proof Skipped: Session QueuedChanged (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Session QueuedKeys (r:1 w:1)
	// Proof Skipped: Session QueuedKeys (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Session DisabledValidators (r:1 w:0)
	// Proof Skipped: Session DisabledValidators (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking Points (r:1 w:1)
	// Proof Skipped: ParachainStaking Points (max_values: None, max_size: None, mode: Measured)
	// Storage: Issuance SessionIssuance (r:1 w:1)
	// Proof Skipped: Issuance SessionIssuance (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking RoundAggregatorInfo (r:1 w:2)
	// Proof Skipped: ParachainStaking RoundAggregatorInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking AwardedPts (r:52 w:51)
	// Proof Skipped: ParachainStaking AwardedPts (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking AtStake (r:51 w:102)
	// Proof Skipped: ParachainStaking AtStake (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking CollatorCommission (r:1 w:0)
	// Proof Skipped: ParachainStaking CollatorCommission (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking StakingLiquidityTokens (r:1 w:1)
	// Proof Skipped: ParachainStaking StakingLiquidityTokens (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Xyk LiquidityPools (r:100 w:0)
	// Proof: Xyk LiquidityPools (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	// Storage: Xyk Pools (r:100 w:0)
	// Proof: Xyk Pools (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	// Storage: Tokens TotalIssuance (r:101 w:1)
	// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ParachainStaking CandidatePool (r:1 w:0)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidateAggregator (r:1 w:0)
	// Proof Skipped: ParachainStaking CandidateAggregator (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking TotalSelected (r:1 w:0)
	// Proof Skipped: ParachainStaking TotalSelected (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidateState (r:51 w:0)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: Issuance IssuanceConfigStore (r:1 w:0)
	// Proof Skipped: Issuance IssuanceConfigStore (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ProofOfStake RewardsSchedules (r:1 w:0)
	// Proof Skipped: ProofOfStake RewardsSchedules (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ProofOfStake ScheduleRewardsPerSingleLiquidity (r:1 w:1)
	// Proof Skipped: ProofOfStake ScheduleRewardsPerSingleLiquidity (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ProofOfStake PromotedPoolRewards (r:1 w:1)
	// Proof Skipped: ProofOfStake PromotedPoolRewards (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ProofOfStake TotalActivatedLiquidity (r:100 w:0)
	// Proof Skipped: ProofOfStake TotalActivatedLiquidity (max_values: None, max_size: None, mode: Measured)
	// Storage: Tokens Accounts (r:2 w:2)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: Session NextKeys (r:51 w:0)
	// Proof Skipped: Session NextKeys (max_values: None, max_size: None, mode: Measured)
	// Storage: Aura Authorities (r:1 w:0)
	// Proof: Aura Authorities (max_values: Some(1), max_size: Some(3200004), added: 3200499, mode: MaxEncodedLen)
	// Storage: ParachainStaking SelectedCandidates (r:0 w:1)
	// Proof Skipped: ParachainStaking SelectedCandidates (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking RoundCollatorRewardInfo (r:0 w:51)
	// Proof Skipped: ParachainStaking RoundCollatorRewardInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: Session Validators (r:0 w:1)
	// Proof Skipped: Session Validators (max_values: Some(1), max_size: None, mode: Measured)
	fn active_session_change(x: u32, y: u32, z: u32, ) -> Weight {
		(Weight::from_parts(1_634_783_507, 0))
			// Standard Error: 32_199
			.saturating_add((Weight::from_parts(18_829_187, 0)).saturating_mul(x as u64))
			// Standard Error: 66_033
			.saturating_add((Weight::from_parts(7_604_897, 0)).saturating_mul(y as u64))
			// Standard Error: 114_378
			.saturating_add((Weight::from_parts(47_173_573, 0)).saturating_mul(z as u64))
			.saturating_add(T::DbWeight::get().reads(226 as u64))
			.saturating_add(T::DbWeight::get().reads((4 as u64).saturating_mul(x as u64)))
			.saturating_add(T::DbWeight::get().writes(220 as u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: ParachainStaking TotalSelected (r:1 w:1)
	// Proof Skipped: ParachainStaking TotalSelected (max_values: Some(1), max_size: None, mode: Measured)
	fn set_total_selected() -> Weight {
		(Weight::from_parts(18_150_000, 0))
			.saturating_add(RocksDbWeight::get().reads(1 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking CollatorCommission (r:1 w:1)
	// Proof Skipped: ParachainStaking CollatorCommission (max_values: Some(1), max_size: None, mode: Measured)
	fn set_collator_commission() -> Weight {
		(Weight::from_parts(18_530_000, 0))
			.saturating_add(RocksDbWeight::get().reads(1 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking DelegatorState (r:1 w:0)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking AggregatorMetadata (r:1 w:0)
	// Proof Skipped: ParachainStaking AggregatorMetadata (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking StakingLiquidityTokens (r:1 w:0)
	// Proof Skipped: ParachainStaking StakingLiquidityTokens (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Xyk LiquidityPools (r:1 w:0)
	// Proof: Xyk LiquidityPools (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	// Storage: Xyk Pools (r:1 w:0)
	// Proof: Xyk Pools (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	// Storage: Tokens TotalIssuance (r:1 w:0)
	// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:1 w:1)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking Total (r:1 w:1)
	// Proof Skipped: ParachainStaking Total (max_values: None, max_size: None, mode: Measured)
	fn join_candidates(x: u32, y: u32, ) -> Weight {
		(Weight::from_parts(128_769_592, 0))
			// Standard Error: 5_183
			.saturating_add((Weight::from_parts(124_370, 0)).saturating_mul(x as u64))
			// Standard Error: 5_120
			.saturating_add((Weight::from_parts(134_647, 0)).saturating_mul(y as u64))
			.saturating_add(RocksDbWeight::get().reads(11 as u64))
			.saturating_add(RocksDbWeight::get().writes(5 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	fn schedule_leave_candidates(x: u32, ) -> Weight {
		(Weight::from_parts(40_966_197, 0))
			// Standard Error: 1_766
			.saturating_add((Weight::from_parts(121_647, 0)).saturating_mul(x as u64))
			.saturating_add(RocksDbWeight::get().reads(3 as u64))
			.saturating_add(RocksDbWeight::get().writes(2 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:30 w:30)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:30 w:30)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking DelegatorState (r:29 w:29)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidateAggregator (r:1 w:0)
	// Proof Skipped: ParachainStaking CandidateAggregator (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking Total (r:1 w:1)
	// Proof Skipped: ParachainStaking Total (max_values: None, max_size: None, mode: Measured)
	fn execute_leave_candidates(x: u32, ) -> Weight {
		(Weight::from_parts(61_759_888, 0))
			// Standard Error: 25_405
			.saturating_add((Weight::from_parts(31_682_004, 0)).saturating_mul(x as u64))
			.saturating_add(RocksDbWeight::get().reads(3 as u64))
			.saturating_add(RocksDbWeight::get().reads((3 as u64).saturating_mul(x as u64)))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
			.saturating_add(RocksDbWeight::get().writes((3 as u64).saturating_mul(x as u64)))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	fn cancel_leave_candidates(x: u32, ) -> Weight {
		(Weight::from_parts(39_197_562, 0))
			// Standard Error: 1_699
			.saturating_add((Weight::from_parts(119_579, 0)).saturating_mul(x as u64))
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(2 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	fn go_offline() -> Weight {
		(Weight::from_parts(39_200_000, 0))
			.saturating_add(RocksDbWeight::get().reads(3 as u64))
			.saturating_add(RocksDbWeight::get().writes(2 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	fn go_online() -> Weight {
		(Weight::from_parts(38_610_000, 0))
			.saturating_add(RocksDbWeight::get().reads(3 as u64))
			.saturating_add(RocksDbWeight::get().writes(2 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:1 w:0)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:0)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	fn schedule_candidate_bond_more() -> Weight {
		(Weight::from_parts(56_000_000, 0))
			.saturating_add(RocksDbWeight::get().reads(4 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: Xyk LiquidityPools (r:1 w:0)
	// Proof: Xyk LiquidityPools (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	// Storage: Xyk Pools (r:1 w:0)
	// Proof: Xyk Pools (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	// Storage: Tokens TotalIssuance (r:1 w:0)
	// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	fn schedule_candidate_bond_less() -> Weight {
		(Weight::from_parts(57_740_000, 0))
			.saturating_add(RocksDbWeight::get().reads(5 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:1 w:1)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking Total (r:1 w:1)
	// Proof Skipped: ParachainStaking Total (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	fn execute_candidate_bond_more() -> Weight {
		(Weight::from_parts(90_910_000, 0))
			.saturating_add(RocksDbWeight::get().reads(6 as u64))
			.saturating_add(RocksDbWeight::get().writes(5 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:1 w:1)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking Total (r:1 w:1)
	// Proof Skipped: ParachainStaking Total (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	fn execute_candidate_bond_less() -> Weight {
		(Weight::from_parts(87_720_000, 0))
			.saturating_add(RocksDbWeight::get().reads(6 as u64))
			.saturating_add(RocksDbWeight::get().writes(5 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	fn cancel_candidate_bond_more() -> Weight {
		(Weight::from_parts(30_420_000, 0))
			.saturating_add(RocksDbWeight::get().reads(1 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	fn cancel_candidate_bond_less() -> Weight {
		(Weight::from_parts(29_860_000, 0))
			.saturating_add(RocksDbWeight::get().reads(1 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking AggregatorMetadata (r:1 w:0)
	// Proof Skipped: ParachainStaking AggregatorMetadata (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: Xyk LiquidityPools (r:1 w:0)
	// Proof: Xyk LiquidityPools (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	// Storage: Xyk Pools (r:1 w:0)
	// Proof: Xyk Pools (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	// Storage: Tokens TotalIssuance (r:1 w:0)
	// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:1 w:1)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking Total (r:1 w:1)
	// Proof Skipped: ParachainStaking Total (max_values: None, max_size: None, mode: Measured)
	fn delegate(x: u32, y: u32, ) -> Weight {
		(Weight::from_parts(127_734_458, 0))
			// Standard Error: 7_698
			.saturating_add((Weight::from_parts(369_909, 0)).saturating_mul(x as u64))
			// Standard Error: 7_439
			.saturating_add((Weight::from_parts(357_907, 0)).saturating_mul(y as u64))
			.saturating_add(RocksDbWeight::get().reads(10 as u64))
			.saturating_add(RocksDbWeight::get().writes(6 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	fn schedule_leave_delegators() -> Weight {
		(Weight::from_parts(33_410_000, 0))
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidateState (r:29 w:29)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:1 w:1)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking Total (r:1 w:1)
	// Proof Skipped: ParachainStaking Total (max_values: None, max_size: None, mode: Measured)
	fn execute_leave_delegators(x: u32, ) -> Weight {
		(Weight::from_parts(24_848_761, 0))
			// Standard Error: 26_767
			.saturating_add((Weight::from_parts(38_484_757, 0)).saturating_mul(x as u64))
			.saturating_add(RocksDbWeight::get().reads(5 as u64))
			.saturating_add(RocksDbWeight::get().reads((1 as u64).saturating_mul(x as u64)))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
			.saturating_add(RocksDbWeight::get().writes((1 as u64).saturating_mul(x as u64)))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	fn cancel_leave_delegators() -> Weight {
		(Weight::from_parts(31_130_000, 0))
			.saturating_add(RocksDbWeight::get().reads(1 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	fn schedule_revoke_delegation() -> Weight {
		(Weight::from_parts(34_070_000, 0))
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:1 w:0)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:0)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	fn schedule_delegator_bond_more() -> Weight {
		(Weight::from_parts(56_650_000, 0))
			.saturating_add(RocksDbWeight::get().reads(4 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	fn schedule_delegator_bond_less() -> Weight {
		(Weight::from_parts(34_280_000, 0))
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:1 w:1)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking Total (r:1 w:1)
	// Proof Skipped: ParachainStaking Total (max_values: None, max_size: None, mode: Measured)
	fn execute_revoke_delegation() -> Weight {
		(Weight::from_parts(111_770_000, 0))
			.saturating_add(RocksDbWeight::get().reads(7 as u64))
			.saturating_add(RocksDbWeight::get().writes(6 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:1 w:1)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking Total (r:1 w:1)
	// Proof Skipped: ParachainStaking Total (max_values: None, max_size: None, mode: Measured)
	fn execute_delegator_bond_more() -> Weight {
		(Weight::from_parts(103_940_000, 0))
			.saturating_add(RocksDbWeight::get().reads(7 as u64))
			.saturating_add(RocksDbWeight::get().writes(6 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidateState (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: MultiPurposeLiquidity ReserveStatus (r:1 w:1)
	// Proof: MultiPurposeLiquidity ReserveStatus (max_values: None, max_size: Some(124), added: 2599, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: ParachainStaking CandidatePool (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking Total (r:1 w:1)
	// Proof Skipped: ParachainStaking Total (max_values: None, max_size: None, mode: Measured)
	fn execute_delegator_bond_less() -> Weight {
		(Weight::from_parts(99_690_000, 0))
			.saturating_add(RocksDbWeight::get().reads(7 as u64))
			.saturating_add(RocksDbWeight::get().writes(6 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	fn cancel_revoke_delegation() -> Weight {
		(Weight::from_parts(31_370_000, 0))
			.saturating_add(RocksDbWeight::get().reads(1 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	fn cancel_delegator_bond_more() -> Weight {
		(Weight::from_parts(35_290_000, 0))
			.saturating_add(RocksDbWeight::get().reads(1 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking DelegatorState (r:1 w:1)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	fn cancel_delegator_bond_less() -> Weight {
		(Weight::from_parts(35_540_000, 0))
			.saturating_add(RocksDbWeight::get().reads(1 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: Xyk LiquidityPools (r:1 w:0)
	// Proof: Xyk LiquidityPools (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	// Storage: ParachainStaking StakingLiquidityTokens (r:1 w:1)
	// Proof Skipped: ParachainStaking StakingLiquidityTokens (max_values: Some(1), max_size: None, mode: Measured)
	fn add_staking_liquidity_token(x: u32, ) -> Weight {
		(Weight::from_parts(28_340_872, 0))
			// Standard Error: 2_236
			.saturating_add((Weight::from_parts(153_025, 0)).saturating_mul(x as u64))
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking StakingLiquidityTokens (r:1 w:1)
	// Proof Skipped: ParachainStaking StakingLiquidityTokens (max_values: Some(1), max_size: None, mode: Measured)
	fn remove_staking_liquidity_token(x: u32, ) -> Weight {
		(Weight::from_parts(20_686_950, 0))
			// Standard Error: 1_638
			.saturating_add((Weight::from_parts(140_026, 0)).saturating_mul(x as u64))
			.saturating_add(RocksDbWeight::get().reads(1 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:99 w:0)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking DelegatorState (r:1 w:0)
	// Proof Skipped: ParachainStaking DelegatorState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking AggregatorMetadata (r:1 w:1)
	// Proof Skipped: ParachainStaking AggregatorMetadata (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidateAggregator (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateAggregator (max_values: Some(1), max_size: None, mode: Measured)
	fn aggregator_update_metadata() -> Weight {
		(Weight::from_parts(1_946_910_000, 0))
			.saturating_add(RocksDbWeight::get().reads(102 as u64))
			.saturating_add(RocksDbWeight::get().writes(2 as u64))
	}
	// Storage: ParachainStaking CandidateState (r:1 w:0)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidateAggregator (r:1 w:1)
	// Proof Skipped: ParachainStaking CandidateAggregator (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking AggregatorMetadata (r:2 w:2)
	// Proof Skipped: ParachainStaking AggregatorMetadata (max_values: None, max_size: None, mode: Measured)
	fn update_candidate_aggregator() -> Weight {
		(Weight::from_parts(122_120_000, 0))
			.saturating_add(RocksDbWeight::get().reads(4 as u64))
			.saturating_add(RocksDbWeight::get().writes(3 as u64))
	}
	// Storage: ParachainStaking RoundCollatorRewardInfo (r:2 w:1)
	// Proof Skipped: ParachainStaking RoundCollatorRewardInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: Tokens Accounts (r:32 w:32)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: System Account (r:32 w:31)
	// Proof Skipped: System Account (max_values: None, max_size: None, mode: Measured)
	fn payout_collator_rewards() -> Weight {
		(Weight::from_parts(1_493_000_000, 0))
			.saturating_add(RocksDbWeight::get().reads(66 as u64))
			.saturating_add(RocksDbWeight::get().writes(64 as u64))
	}
	// Storage: ParachainStaking RoundCollatorRewardInfo (r:1 w:1)
	// Proof Skipped: ParachainStaking RoundCollatorRewardInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: Tokens Accounts (r:2 w:2)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: System Account (r:2 w:1)
	// Proof Skipped: System Account (max_values: None, max_size: None, mode: Measured)
	fn payout_delegator_reward() -> Weight {
		(Weight::from_parts(87_790_000, 0))
			.saturating_add(RocksDbWeight::get().reads(5 as u64))
			.saturating_add(RocksDbWeight::get().writes(4 as u64))
	}
	// Storage: ParachainStaking Round (r:1 w:0)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	fn passive_session_change() -> Weight {
		(Weight::from_parts(7_670_000, 0))
			.saturating_add(RocksDbWeight::get().reads(1 as u64))
	}
	// Storage: ParachainStaking Round (r:1 w:1)
	// Proof Skipped: ParachainStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Session CurrentIndex (r:1 w:1)
	// Proof Skipped: Session CurrentIndex (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Session QueuedChanged (r:1 w:1)
	// Proof Skipped: Session QueuedChanged (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Session QueuedKeys (r:1 w:1)
	// Proof Skipped: Session QueuedKeys (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Session DisabledValidators (r:1 w:0)
	// Proof Skipped: Session DisabledValidators (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking Points (r:1 w:1)
	// Proof Skipped: ParachainStaking Points (max_values: None, max_size: None, mode: Measured)
	// Storage: Issuance SessionIssuance (r:1 w:1)
	// Proof Skipped: Issuance SessionIssuance (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking RoundAggregatorInfo (r:1 w:2)
	// Proof Skipped: ParachainStaking RoundAggregatorInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking AwardedPts (r:52 w:51)
	// Proof Skipped: ParachainStaking AwardedPts (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking AtStake (r:51 w:102)
	// Proof Skipped: ParachainStaking AtStake (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainStaking CollatorCommission (r:1 w:0)
	// Proof Skipped: ParachainStaking CollatorCommission (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking StakingLiquidityTokens (r:1 w:1)
	// Proof Skipped: ParachainStaking StakingLiquidityTokens (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Xyk LiquidityPools (r:100 w:0)
	// Proof: Xyk LiquidityPools (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	// Storage: Xyk Pools (r:100 w:0)
	// Proof: Xyk Pools (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	// Storage: Tokens TotalIssuance (r:101 w:1)
	// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ParachainStaking CandidatePool (r:1 w:0)
	// Proof Skipped: ParachainStaking CandidatePool (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidateAggregator (r:1 w:0)
	// Proof Skipped: ParachainStaking CandidateAggregator (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking TotalSelected (r:1 w:0)
	// Proof Skipped: ParachainStaking TotalSelected (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking CandidateState (r:51 w:0)
	// Proof Skipped: ParachainStaking CandidateState (max_values: None, max_size: None, mode: Measured)
	// Storage: Issuance IssuanceConfigStore (r:1 w:0)
	// Proof Skipped: Issuance IssuanceConfigStore (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ProofOfStake RewardsSchedules (r:1 w:0)
	// Proof Skipped: ProofOfStake RewardsSchedules (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ProofOfStake ScheduleRewardsPerSingleLiquidity (r:1 w:1)
	// Proof Skipped: ProofOfStake ScheduleRewardsPerSingleLiquidity (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ProofOfStake PromotedPoolRewards (r:1 w:1)
	// Proof Skipped: ProofOfStake PromotedPoolRewards (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ProofOfStake TotalActivatedLiquidity (r:100 w:0)
	// Proof Skipped: ProofOfStake TotalActivatedLiquidity (max_values: None, max_size: None, mode: Measured)
	// Storage: Tokens Accounts (r:2 w:2)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: Session NextKeys (r:51 w:0)
	// Proof Skipped: Session NextKeys (max_values: None, max_size: None, mode: Measured)
	// Storage: Aura Authorities (r:1 w:0)
	// Proof: Aura Authorities (max_values: Some(1), max_size: Some(3200004), added: 3200499, mode: MaxEncodedLen)
	// Storage: ParachainStaking SelectedCandidates (r:0 w:1)
	// Proof Skipped: ParachainStaking SelectedCandidates (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainStaking RoundCollatorRewardInfo (r:0 w:51)
	// Proof Skipped: ParachainStaking RoundCollatorRewardInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: Session Validators (r:0 w:1)
	// Proof Skipped: Session Validators (max_values: Some(1), max_size: None, mode: Measured)
	fn active_session_change(x: u32, y: u32, z: u32, ) -> Weight {
		(Weight::from_parts(1_634_783_507, 0))
			// Standard Error: 32_199
			.saturating_add((Weight::from_parts(18_829_187, 0)).saturating_mul(x as u64))
			// Standard Error: 66_033
			.saturating_add((Weight::from_parts(7_604_897, 0)).saturating_mul(y as u64))
			// Standard Error: 114_378
			.saturating_add((Weight::from_parts(47_173_573, 0)).saturating_mul(z as u64))
			.saturating_add(RocksDbWeight::get().reads(226 as u64))
			.saturating_add(RocksDbWeight::get().reads((4 as u64).saturating_mul(x as u64)))
			.saturating_add(RocksDbWeight::get().writes(220 as u64))
	}
}
